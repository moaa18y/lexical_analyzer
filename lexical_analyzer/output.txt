Lexeme  /////  Token
int  /////  Keyword
a  /////  Identifier
,  /////  Symbol
b  /////  Identifier
,  /////  Symbol
c  /////  Identifier
;  /////  Symbol
float  /////  Keyword
d  /////  Identifier
,  /////  Symbol
e  /////  Identifier
;  /////  Symbol
a  /////  Identifier
=  /////  Operator
b  /////  Identifier
=  /////  Operator
5  /////  Digit
;  /////  Symbol
c  /////  Identifier
=  /////  Operator
6  /////  Digit
;  /////  Symbol
if  /////  Keyword
(  /////  Symbol
a  /////  Identifier
>  /////  Logical Operator
b  /////  Identifier
)  /////  Symbol
{  /////  Symbol
c  /////  Identifier
=  /////  Operator
a  /////  Identifier
-  /////  Operator
b  /////  Identifier
;  /////  Symbol
e  /////  Identifier
=  /////  Operator
d  /////  Identifier
-  /////  Operator
0.2  /////  Digit
;  /////  Symbol
}  /////  Symbol
else  /////  Keyword
{  /////  Symbol
d  /////  Identifier
=  /////  Operator
e  /////  Identifier
+  /////  Operator
6.0  /////  Digit
;  /////  Symbol
b  /////  Identifier
=  /////  Operator
a  /////  Identifier
+  /////  Operator
c  /////  Identifier
;  /////  Symbol
}  /////  Symbol
System  /////  Keyword
.  /////  Symbol
out  /////  Keyword
.  /////  Symbol
println  /////  Keyword
(  /////  Symbol
"lexical"  /////  Output to the user
)  /////  Symbol
;  /////  Symbol
